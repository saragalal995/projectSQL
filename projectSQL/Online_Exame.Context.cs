//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace projectSQL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Online_Exame : DbContext
    {
        public Online_Exame()
            : base("name=Online_Exame")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<course> courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instractor> Instractors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Student_Exam> Student_Exam { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        [DbFunction("Online_Exame", "correctAns")]
        public virtual IQueryable<correctAns_Result> correctAns(Nullable<int> st_id, Nullable<int> ex_id)
        {
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("st_id", st_id) :
                new ObjectParameter("st_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("Ex_id", ex_id) :
                new ObjectParameter("Ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<correctAns_Result>("[Online_Exame].[correctAns](@st_id, @Ex_id)", st_idParameter, ex_idParameter);
        }
    
        [DbFunction("Online_Exame", "Examcourse")]
        public virtual IQueryable<Examcourse_Result> Examcourse(Nullable<int> st_id)
        {
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("st_id", st_id) :
                new ObjectParameter("st_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Examcourse_Result>("[Online_Exame].[Examcourse](@st_id)", st_idParameter);
        }
    
        [DbFunction("Online_Exame", "studentExamCourse")]
        public virtual IQueryable<studentExamCourse_Result> studentExamCourse(Nullable<int> st_id)
        {
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("st_id", st_id) :
                new ObjectParameter("st_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<studentExamCourse_Result>("[Online_Exame].[studentExamCourse](@st_id)", st_idParameter);
        }
    
        public virtual int Add_Course_instractor(Nullable<int> crs_id, Nullable<int> ins_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Course_instractor", crs_idParameter, ins_idParameter);
        }
    
        public virtual int Delete_course_instractor(Nullable<int> crs_id, Nullable<int> ins_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_course_instractor", crs_idParameter, ins_idParameter);
        }
    
        public virtual ObjectResult<string> deleteCourse(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteCourse", idParameter);
        }
    
        public virtual ObjectResult<string> deleteDepartment(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteDepartment", idParameter);
        }
    
        public virtual ObjectResult<string> deleteExam(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteExam", idParameter);
        }
    
        public virtual ObjectResult<string> deleteInstructor(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteInstructor", idParameter);
        }
    
        public virtual ObjectResult<string> deleteQuestion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteQuestion", idParameter);
        }
    
        public virtual ObjectResult<string> deleteStudent(Nullable<int> st_id)
        {
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("St_id", st_id) :
                new ObjectParameter("St_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteStudent", st_idParameter);
        }
    
        public virtual ObjectResult<string> deleteStudentExam(Nullable<int> sid, Nullable<int> exid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            var exidParameter = exid.HasValue ?
                new ObjectParameter("exid", exid) :
                new ObjectParameter("exid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteStudentExam", sidParameter, exidParameter);
        }
    
        public virtual ObjectResult<string> deleteTopic(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteTopic", idParameter);
        }
    
        public virtual ObjectResult<ExamAnswers_Result> ExamAnswers(Nullable<int> exID)
        {
            var exIDParameter = exID.HasValue ?
                new ObjectParameter("exID", exID) :
                new ObjectParameter("exID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamAnswers_Result>("ExamAnswers", exIDParameter);
        }
    
        public virtual ObjectResult<ExamCorrection_Result> ExamCorrection(Nullable<int> stID, Nullable<int> eXid)
        {
            var stIDParameter = stID.HasValue ?
                new ObjectParameter("stID", stID) :
                new ObjectParameter("stID", typeof(int));
    
            var eXidParameter = eXid.HasValue ?
                new ObjectParameter("EXid", eXid) :
                new ObjectParameter("EXid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamCorrection_Result>("ExamCorrection", stIDParameter, eXidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ExamRes(Nullable<int> stID, Nullable<int> ex_id)
        {
            var stIDParameter = stID.HasValue ?
                new ObjectParameter("stID", stID) :
                new ObjectParameter("stID", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("Ex_id", ex_id) :
                new ObjectParameter("Ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExamRes", stIDParameter, ex_idParameter);
        }
    
        public virtual ObjectResult<Examresults_Result> Examresults(Nullable<int> stID)
        {
            var stIDParameter = stID.HasValue ?
                new ObjectParameter("stID", stID) :
                new ObjectParameter("stID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Examresults_Result>("Examresults", stIDParameter);
        }
    
        public virtual ObjectResult<string> GenerateExam(Nullable<int> ex_id, string ex_Des, Nullable<int> duration, Nullable<int> c_id, Nullable<int> st_id, Nullable<int> cout1_Question, Nullable<int> cout2_Question)
        {
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("Ex_id", ex_id) :
                new ObjectParameter("Ex_id", typeof(int));
    
            var ex_DesParameter = ex_Des != null ?
                new ObjectParameter("Ex_Des", ex_Des) :
                new ObjectParameter("Ex_Des", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var c_idParameter = c_id.HasValue ?
                new ObjectParameter("C_id", c_id) :
                new ObjectParameter("C_id", typeof(int));
    
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("St_id", st_id) :
                new ObjectParameter("St_id", typeof(int));
    
            var cout1_QuestionParameter = cout1_Question.HasValue ?
                new ObjectParameter("cout1_Question", cout1_Question) :
                new ObjectParameter("cout1_Question", typeof(int));
    
            var cout2_QuestionParameter = cout2_Question.HasValue ?
                new ObjectParameter("cout2_Question", cout2_Question) :
                new ObjectParameter("cout2_Question", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GenerateExam", ex_idParameter, ex_DesParameter, durationParameter, c_idParameter, st_idParameter, cout1_QuestionParameter, cout2_QuestionParameter);
        }
    
        public virtual ObjectResult<string> get_AllGrades_student(Nullable<int> st_id)
        {
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("St_id", st_id) :
                new ObjectParameter("St_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_AllGrades_student", st_idParameter);
        }
    
        public virtual ObjectResult<string> Get_course_instructor(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get_course_instructor", crs_idParameter);
        }
    
        public virtual ObjectResult<string> get_course_instructors(Nullable<int> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_course_instructors", insIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Get_insid_by_inname(string ins_name)
        {
            var ins_nameParameter = ins_name != null ?
                new ObjectParameter("ins_name", ins_name) :
                new ObjectParameter("ins_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_insid_by_inname", ins_nameParameter);
        }
    
        public virtual ObjectResult<Get_instructor_by_deptId_Result> Get_instructor_by_deptId(Nullable<int> dept_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_instructor_by_deptId_Result>("Get_instructor_by_deptId", dept_idParameter);
        }
    
        public virtual ObjectResult<string> get_instructor_course(Nullable<int> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_instructor_course", insIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Get_instructorid_by_crsid(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_instructorid_by_crsid", crs_idParameter);
        }
    
        public virtual ObjectResult<getAllcourses_Result> getAllcourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllcourses_Result>("getAllcourses");
        }
    
        public virtual ObjectResult<getallDepartement_Result> getallDepartement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getallDepartement_Result>("getallDepartement");
        }
    
        public virtual ObjectResult<getAllExamsInCourse_Result> getAllExamsInCourse(Nullable<int> c_id)
        {
            var c_idParameter = c_id.HasValue ?
                new ObjectParameter("c_id", c_id) :
                new ObjectParameter("c_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllExamsInCourse_Result>("getAllExamsInCourse", c_idParameter);
        }
    
        public virtual ObjectResult<getAllInstructors_Result> getAllInstructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllInstructors_Result>("getAllInstructors");
        }
    
        public virtual ObjectResult<getAllstudentExam_Result> getAllstudentExam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllstudentExam_Result>("getAllstudentExam");
        }
    
        public virtual ObjectResult<string> getAllstudents(Nullable<int> dept_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getAllstudents", dept_idParameter);
        }
    
        public virtual ObjectResult<getAlltopics_Result> getAlltopics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAlltopics_Result>("getAlltopics");
        }
    
        public virtual ObjectResult<GetCoursebyId_Result> GetCoursebyId(Nullable<int> c_ID)
        {
            var c_IDParameter = c_ID.HasValue ?
                new ObjectParameter("C_ID", c_ID) :
                new ObjectParameter("C_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCoursebyId_Result>("GetCoursebyId", c_IDParameter);
        }
    
        public virtual ObjectResult<GetcourseInstructor_Result> GetcourseInstructor(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetcourseInstructor_Result>("GetcourseInstructor", cidParameter);
        }
    
        public virtual ObjectResult<string> getCourses_Student(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("Ins_id", ins_id) :
                new ObjectParameter("Ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCourses_Student", ins_idParameter);
        }
    
        public virtual ObjectResult<string> getCourses_TOpic(Nullable<int> c_id)
        {
            var c_idParameter = c_id.HasValue ?
                new ObjectParameter("C_id", c_id) :
                new ObjectParameter("C_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCourses_TOpic", c_idParameter);
        }
    
        public virtual ObjectResult<getCoursesByDeptID_Result> getCoursesByDeptID(Nullable<int> deptid)
        {
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCoursesByDeptID_Result>("getCoursesByDeptID", deptidParameter);
        }
    
        public virtual ObjectResult<GetDeptbyId_Result> GetDeptbyId(Nullable<int> dept_ID)
        {
            var dept_IDParameter = dept_ID.HasValue ?
                new ObjectParameter("Dept_ID", dept_ID) :
                new ObjectParameter("Dept_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeptbyId_Result>("GetDeptbyId", dept_IDParameter);
        }
    
        public virtual ObjectResult<getExam_Question_Result> getExam_Question(Nullable<int> ex_id)
        {
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("Ex_id", ex_id) :
                new ObjectParameter("Ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getExam_Question_Result>("getExam_Question", ex_idParameter);
        }
    
        public virtual ObjectResult<string> getExam_Question_Answer(Nullable<int> ex_id, Nullable<int> st_id)
        {
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("Ex_id", ex_id) :
                new ObjectParameter("Ex_id", typeof(int));
    
            var st_idParameter = st_id.HasValue ?
                new ObjectParameter("St_id", st_id) :
                new ObjectParameter("St_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getExam_Question_Answer", ex_idParameter, st_idParameter);
        }
    
        public virtual ObjectResult<getInsCourses_Result> getInsCourses(Nullable<int> insID)
        {
            var insIDParameter = insID.HasValue ?
                new ObjectParameter("insID", insID) :
                new ObjectParameter("insID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInsCourses_Result>("getInsCourses", insIDParameter);
        }
    
        public virtual ObjectResult<getInstractor_Result> getInstractor(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInstractor_Result>("getInstractor", ins_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getInstractor_Course(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getInstractor_Course", ins_idParameter);
        }
    
        public virtual ObjectResult<getInstructorByid_Result> getInstructorByid(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInstructorByid_Result>("getInstructorByid", ins_idParameter);
        }
    
        public virtual ObjectResult<getInstructorperDept_Result> getInstructorperDept(Nullable<int> dept_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInstructorperDept_Result>("getInstructorperDept", dept_idParameter);
        }
    
        public virtual ObjectResult<GetStudentbyId_Result> GetStudentbyId(Nullable<int> st_ID)
        {
            var st_IDParameter = st_ID.HasValue ?
                new ObjectParameter("st_ID", st_ID) :
                new ObjectParameter("st_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentbyId_Result>("GetStudentbyId", st_IDParameter);
        }
    
        public virtual ObjectResult<getStudentCourse_Result> getStudentCourse(Nullable<int> stid)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("stid", stid) :
                new ObjectParameter("stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentCourse_Result>("getStudentCourse", stidParameter);
        }
    
        public virtual ObjectResult<getstudentExam_Result> getstudentExam(Nullable<int> exid)
        {
            var exidParameter = exid.HasValue ?
                new ObjectParameter("exid", exid) :
                new ObjectParameter("exid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getstudentExam_Result>("getstudentExam", exidParameter);
        }
    
        public virtual int InsertNewCourse(string cname)
        {
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNewCourse", cnameParameter);
        }
    
        public virtual ObjectResult<string> InsertNewDepartement(string deptname, Nullable<int> deptmang)
        {
            var deptnameParameter = deptname != null ?
                new ObjectParameter("deptname", deptname) :
                new ObjectParameter("deptname", typeof(string));
    
            var deptmangParameter = deptmang.HasValue ?
                new ObjectParameter("deptmang", deptmang) :
                new ObjectParameter("deptmang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertNewDepartement", deptnameParameter, deptmangParameter);
        }
    
        public virtual ObjectResult<string> insertNewStudent(string fname, string lname, string add, Nullable<int> age, string email, Nullable<int> did)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var addParameter = add != null ?
                new ObjectParameter("add", add) :
                new ObjectParameter("add", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertNewStudent", fnameParameter, lnameParameter, addParameter, ageParameter, emailParameter, didParameter);
        }
    
        public virtual ObjectResult<string> NewChoice(Nullable<int> cid, Nullable<int> qid, string ch)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var chParameter = ch != null ?
                new ObjectParameter("ch", ch) :
                new ObjectParameter("ch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NewChoice", cidParameter, qidParameter, chParameter);
        }
    
        public virtual ObjectResult<string> NewExam(string des, Nullable<int> duration, Nullable<int> c_id, Nullable<int> count1, Nullable<int> count2)
        {
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            var c_idParameter = c_id.HasValue ?
                new ObjectParameter("C_id", c_id) :
                new ObjectParameter("C_id", typeof(int));
    
            var count1Parameter = count1.HasValue ?
                new ObjectParameter("count1", count1) :
                new ObjectParameter("count1", typeof(int));
    
            var count2Parameter = count2.HasValue ?
                new ObjectParameter("count2", count2) :
                new ObjectParameter("count2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NewExam", desParameter, durationParameter, c_idParameter, count1Parameter, count2Parameter);
        }
    
        public virtual ObjectResult<string> NewInstructor(string fname, string lname, Nullable<int> did)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NewInstructor", fnameParameter, lnameParameter, didParameter);
        }
    
        public virtual ObjectResult<Newquestion_Result> Newquestion(Nullable<int> correct, string type, Nullable<int> grade, string ques, Nullable<int> crs_id)
        {
            var correctParameter = correct.HasValue ?
                new ObjectParameter("correct", correct) :
                new ObjectParameter("correct", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var quesParameter = ques != null ?
                new ObjectParameter("ques", ques) :
                new ObjectParameter("ques", typeof(string));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Newquestion_Result>("Newquestion", correctParameter, typeParameter, gradeParameter, quesParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<string> NewStudentExam(Nullable<int> sid, Nullable<int> qid, Nullable<int> exid, Nullable<int> res, string stAns)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("Qid", qid) :
                new ObjectParameter("Qid", typeof(int));
    
            var exidParameter = exid.HasValue ?
                new ObjectParameter("exid", exid) :
                new ObjectParameter("exid", typeof(int));
    
            var resParameter = res.HasValue ?
                new ObjectParameter("res", res) :
                new ObjectParameter("res", typeof(int));
    
            var stAnsParameter = stAns != null ?
                new ObjectParameter("stAns", stAns) :
                new ObjectParameter("stAns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NewStudentExam", sidParameter, qidParameter, exidParameter, resParameter, stAnsParameter);
        }
    
        public virtual ObjectResult<string> NewTopic(Nullable<int> cid, string name)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NewTopic", cidParameter, nameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateChoice(Nullable<int> id, Nullable<int> question_ID, string choices)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var question_IDParameter = question_ID.HasValue ?
                new ObjectParameter("Question_ID", question_ID) :
                new ObjectParameter("Question_ID", typeof(int));
    
            var choicesParameter = choices != null ?
                new ObjectParameter("Choices", choices) :
                new ObjectParameter("Choices", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateChoice", idParameter, question_IDParameter, choicesParameter);
        }
    
        public virtual int UpdateCourse(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourse", idParameter, nameParameter);
        }
    
        public virtual int UpdateCourseInstructor(Nullable<int> iId, Nullable<int> cId)
        {
            var iIdParameter = iId.HasValue ?
                new ObjectParameter("IId", iId) :
                new ObjectParameter("IId", typeof(int));
    
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("CId", cId) :
                new ObjectParameter("CId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourseInstructor", iIdParameter, cIdParameter);
        }
    
        public virtual int UpdateDepartment(Nullable<int> id, string name, Nullable<int> dept_Man)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dept_ManParameter = dept_Man.HasValue ?
                new ObjectParameter("Dept_Man", dept_Man) :
                new ObjectParameter("Dept_Man", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDepartment", idParameter, nameParameter, dept_ManParameter);
        }
    
        public virtual int UpdateExam(Nullable<int> id, Nullable<int> duration, string des, Nullable<int> c_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("Des", des) :
                new ObjectParameter("Des", typeof(string));
    
            var c_IdParameter = c_Id.HasValue ?
                new ObjectParameter("C_Id", c_Id) :
                new ObjectParameter("C_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExam", idParameter, durationParameter, desParameter, c_IdParameter);
        }
    
        public virtual int UpdateInstractor(Nullable<int> id, string fname, string lname, Nullable<int> deptID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstractor", idParameter, fnameParameter, lnameParameter, deptIDParameter);
        }
    
        public virtual int UpdateQuestion(Nullable<int> id, Nullable<int> correctAns, string type, Nullable<int> grade, string question, Nullable<int> cId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var correctAnsParameter = correctAns.HasValue ?
                new ObjectParameter("correctAns", correctAns) :
                new ObjectParameter("correctAns", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQuestion", idParameter, correctAnsParameter, typeParameter, gradeParameter, questionParameter, cIdParameter);
        }
    
        public virtual int UpdateStudent(Nullable<int> id, string fname, string lname, string address, Nullable<int> age, string email, Nullable<int> deptID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudent", idParameter, fnameParameter, lnameParameter, addressParameter, ageParameter, emailParameter, deptIDParameter);
        }
    
        public virtual int UpdateStudentCourse(Nullable<int> id, Nullable<int> cID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentCourse", idParameter, cIDParameter);
        }
    
        public virtual int UpdateStudentExam(Nullable<int> id, Nullable<int> qId, Nullable<int> eXId, Nullable<int> result, Nullable<int> sAns)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var qIdParameter = qId.HasValue ?
                new ObjectParameter("QId", qId) :
                new ObjectParameter("QId", typeof(int));
    
            var eXIdParameter = eXId.HasValue ?
                new ObjectParameter("EXId", eXId) :
                new ObjectParameter("EXId", typeof(int));
    
            var resultParameter = result.HasValue ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(int));
    
            var sAnsParameter = sAns.HasValue ?
                new ObjectParameter("SAns", sAns) :
                new ObjectParameter("SAns", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentExam", idParameter, qIdParameter, eXIdParameter, resultParameter, sAnsParameter);
        }
    
        public virtual int UpdateTopic(Nullable<int> id, Nullable<int> cId, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("CId", cId) :
                new ObjectParameter("CId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTopic", idParameter, cIdParameter, nameParameter);
        }
    }
}
